// Timestamp reflects current state of the hybrid logical clock

message Timestamp {

  // Holds a unix epoch time in nanosecs
  optional int64 wall_time = 1;

  // The logical component captures causality for events
  // whose wall times are equal. It is effectively bounded
  // by (maximum clock skew) / (minimal ns between events) and nearly
  // impossible to overflow
  optional int32 logical = 2;
}

message AuthRequest {
    // Echo this string with PingResponse.
    optional string ping = 1;
}

message AuthResponse {
    // An echo of value sent with PingRequest.
    optional string pong = 1;
    optional string cluster_uuid = 2;
    optional string node_uuid = 3;
}

message RemoteOffset {
    // The estimated offset from the remote server, in microseconds.
    optional int64 offset = 1;
    // The maximum error of the measured offset, in microseconds.
    optional int64 error = 2;
    // Measurement time, in microseconds from unix epoch.
    optional int64 measured_at = 3;
}
